name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  continuous-integration:
    name: Continuous integration
    runs-on: ubuntu-latest

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          fetch-depth: 0

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies specified in package.json
        run: |
          pnpm install
          pnpm ls --recursive

      - name: Run the lint script in package.json scripts
        run: |
          pnpm run --if-present lint

      # - name: "Continuous Integration: public code validator"
      #   uses: nl-design-system/publiccode-parser-action@latest

      - name: Run the build script in package.json scripts
        run: |
          pnpm run --if-present build

      - name: Run the test script in package.json scripts
        run: |
          pnpm run --if-present test

      - name: Publish to Chromatic
        uses: chromaui/action@5991575112b472a4fa85429f29cc17e2fb83a2a2 # v11.5.4
        if: |
          github.event.pull_request.draft == false &&
          github.actor != 'dependabot[bot]'
        with:
          autoAcceptChanges: main
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: packages/storybook/dist/

      - name: Upload the Storybook artifact from the build step
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: storybook
          path: packages/storybook/dist/
          retention-days: 1

  publish-storybook:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Download the Storybook artifact from the "Build" job
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: storybook
          path: packages/storybook/dist/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@5c6e9e9f3672ce8fd37b9856193d2a537941e66c # v4.6.1
        with:
          branch: gh-pages
          folder: packages/storybook/dist/

  publish-npm:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc

      - name: Install dependencies specified in package.json
        run: |
          pnpm install
          pnpm ls --recursive

      - name: Run the build script in package.json
        run: |
          pnpm run --if-present build

      - name: Publish to GitHub repository
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release

      - name: Publish to npm repository
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          pnpm run publish
          pnpm config delete "//registry.npmjs.org/:_authToken"
